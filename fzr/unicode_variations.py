#!/usr/bin/env python3
from re import search
import os
import subprocess
import sys
from collections import defaultdict

UNICODE_DATA_URL = 'https://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt'
CATEGORIES = {'Lu', 'Ll', 'Lt', 'Lm', 'So'}

output = subprocess.check_output(['curl', UNICODE_DATA_URL], encoding='utf-8')
letter_variations = defaultdict(list)

for line in output.splitlines():
    fields = line.split(';')
    codepoint = int(fields[0], 16)
    name = fields[1]
    gc = fields[2]

    if gc not in CATEGORIES:
        continue

    m = search(' ([A-Z])( |$)', name)
    if m is None:
        continue
    letter = m[1]

    # SMALL CAPITAL
    if 'CAPITAL' in name:
        pass
    elif 'SMALL' in name:
        letter = letter.lower()
    else:
        continue

    letter_variations[letter].append(chr(codepoint))

tab = ' ' * 4

print(f"""\
// This file was generated by {os.path.basename(sys.argv[0])}.
#[rustfmt::skip]
pub const fn get_unicode_variations(c: char) -> &'static [char] {{
{tab}match c {{\
""")
for letter, variations in sorted(letter_variations.items()):
    print("{indent}'{left}' => &[{right}],".format(
        indent=tab * 2,
        left=letter,
        right=','.join([f"'{v}'" for v in variations if v != letter]),
    ))
print(f"""\
{tab}{tab}_ => &[],
{tab}}}
}}\
""")
